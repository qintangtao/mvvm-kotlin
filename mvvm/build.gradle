apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    kotlinOptions{
        jvmTarget = "1.8"
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //androidx
    api rootProject.ext.androidxs
    //material-dialogs
    api rootProject.ext.mds
    //network
    api rootProject.ext.network
    //glide
    api rootProject.ext.dependencies.glide
    kapt rootProject.ext.dependencies['glide-compiler']
    //utilcodex
    api rootProject.ext.dependencies.utilcodex
    //bindingcollectionadapter2
    api rootProject.ext.bdcltas
    //coroutines
    api rootProject.ext.dependencies.coroutines
    //live-event-bus
    api rootProject.ext.dependencies['live-event-bus']
    //flowlayout
    api rootProject.ext.dependencies.flowlayout

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}


//打包
apply plugin: 'maven'
ext {
    // 从Github上clone下来的项目的本地地址
    GITHUB_REPO_PATH = "E:\\Qt\\Qt5.12.2\\Licenses\\open\\mvvm-kotlin"
    // compile 'com.audienl:super_library:1.0.0'
    PUBLISH_GROUP_ID = 'com.qin'
    PUBLISH_ARTIFACT_ID = 'mvvm'
    PUBLISH_VERSION = '1.0.0'
}

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

/*
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}*/